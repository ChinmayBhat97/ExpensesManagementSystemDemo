@model DRS.ExpenseManagementSystem.UI.Models.ExpenseClaimViewModel

<head>
    @{
        ViewData["Title"] = "Edit Claim";
    }


    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <style>

        td {
            border: 1px solid #000033;
            text-align: left;
            /* padding: 2px;*/
        }

        th {
            border: 1px solid #000033;
            text-align: center;
            /* padding: 2px;*/
            color: whitesmoke;
        }


        tr:nth-child(odd) {
            background-color: #ffffff;
        }

        tr:nth-child(even) {
            background-color: #d9d9d9;
        }

        /* Set the serial number counter to 0 */
        #individual {
            counter-reset: serial-number;
        }

            /* Increment the serial number counter */
            /* Display the counter */
            #individual td:first-child:before {
                counter-increment: serial-number;
                content: counter(serial-number);
            }

    </style>
</head>
<body style="overflow:auto;background-color:#e6e6ff">
    <h4 style="padding-left:225px;color:#000066;"><u><b>Edit Claim Details</b></u></h4>
<br />
<div class="row">
    <div class="col-md-12" style="padding-left:240px;">
        <form asp-route="/ExpenseClaim/Edit/@Model.Id" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" class="form-control" style="display:none" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input asp-for="Status" class="form-control" style="display:none" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label><b>Employee Code:</b></label>
                        @Html.DisplayFor(model => model.Emp.Emp.EmployeeCode, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-8">
                    <div class="form-group">
                        <label asp-for="DeptId" class="form-label input-lable">  <b>  Department </b><span style="color:red;">*</span></label>
                        <select asp-for="DeptId" asp-items="ViewBag.departmentList" class="form-control Selectinput" id="Department" required>
                            <option value="">-- Select --</option>
                        </select>
                    </div>
                </div>

            </div>


            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label><b>Expense Start Date</b><span style="color:red;">*</span></label>
                        @{
                            DateTime maxDate = DateTime.Now;
                            string maxDateString = maxDate.ToString("yyyy-MM-dd");
                        }
                        <input type="date" asp-for="StartDate" class="form-control" id="startDate" max="@maxDateString" required />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label><b>Expense End Date</b><span style="color:red;">*</span></label>
                        @{
                            DateTime maxEndDate = DateTime.Now;
                            string maxEndDateString = maxDate.ToString("yyyy-MM-dd");
                        }
                        <input type="date" asp-for="EndDate" class="form-control" id="endDate" max="@maxEndDateString" required />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="ClaimRequestDate" class="form-label input-lable"><b>Claim Requested Date</b></label>
                        <input type="date" asp-for="ClaimRequestDate" class="form-control" readonly />
                        <span asp-validation-for="ClaimRequestDate" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-7">
                    <div class="form-group">
                        <label asp-for="ProjectId" class="form-label input-lable"><b>Project Title</b><span style="color:red;">*</span></label>
                        <select asp-for="ProjectId" asp-items="ViewBag.projectList" class="form-control Selectinput" id="Project" required>
                            <option value="">-- Select --</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="TotalAmount" class="form-label input-lable">  <b>Total Amount (<span>&#8377;</span>) </b> </label>
                        <input asp-for="TotalAmount" class="form-control" id="ttlamnt" readonly />
                        @*<span class="form-control" id="ttlamnt"></span>*@
                        <span asp-validation-for="TotalAmount" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <hr />

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <h6 style="color:#000066"> <b> <u> Individual Expenditure Details</u> </b> </h6>
                    </div>
                </div>
            </div>


            <div class="col-md-12">
                <table class="table table-bordered indi" id='IndividualExpenditure'>
                        <thead style="vertical-align:middle;">
                            <tr style="text-align:center;">
                                <th style="background-color:  #404040;"> <label>Sl.No</label> </th>
                                <th style="background-color:  #404040;"> <label>Expenditure Date</label> </th>
                                <th style="background-color:  #404040;"> <label>Description</label>      </th>
                                <th style="background-color:  #404040;"> <label>Category</label>         </th>
                                <th style="background-color:  #404040;"> <label>Expense Category</label> </th>
                                <th style="background-color:  #404040;"> <label>Amount</label>           </th>
                                <th style="background-color:  #404040;"> <label>Comments</label>         </th>
                                <th style="background-color:  #404040;"> <label>Receipt Number</label>   </th>
                                <th style="background-color:  #404040;"> <label>Attachment</label>           </th>
                                <th style="background-color:  #404040;"> <label>Action</label>           </th>
                            @*  <th style="background-color: #0000b3;"> <label><b>Image</b><span style="color:red;">*</span></label>           </th>*@
                        </tr>
                    </thead>
                    <tbody class="individual" id="individual">
                        @for (int i = 0; i < Model.IndividualExpenditures.Count; i++)
                        {
                                <tr style="vertical-align:middle;">
                                <input asp-for="@Model.IndividualExpenditures[i].Id" class="form-control" style="display:none" />
                                <input asp-for="@Model.IndividualExpenditures[i].IsApproved" class="form-control" style="display:none" />
                                @* <input asp-for="@Model.IndividualExpenditures[i].IsDelete" class="IsDelete" id="IsDelete" style="display:none" />*@
                                <td style="text-align:center;">
                                    &nbsp;
                                </td>
                                <td style="text-align:center;">
                                    <div class="form-group">
                                        <input type="date" asp-for="@Model.IndividualExpenditures[i].ExpenditureDate" class="form-control" />
                                        <span asp-validation-for="@Model.IndividualExpenditures[i].ExpenditureDate" class="text-danger"></span>
                                    </div>
                                    @*@Html.EditorFor(k =>k.IndividualExpenditures[i].ExpenditureDate, new{htmlAttributes= new {@class ="form-control expDate ",type="date"}})*@
                                </td>

                                    <td style="text-align:center;">
                                    @Html.EditorFor(k =>k.IndividualExpenditures[i].Description, new{htmlAttributes= new {@class ="form-control desc "}})
                                </td>
                                    <td style="text-align:center;">
                                    <select asp-for="@Model.IndividualExpenditures[i].Category" class="form-control category" required>
                                        <option value="">-- Select --</option>
                                        <option value="Official">Official</option>
                                        <option value="Personal">Personal</option>
                                    </select>
                                    <span asp-validation-for="@Model.IndividualExpenditures[i].Category" class="text-danger"></span>
                                </td>
                                    <td style="text-align:center;">
                                    <select asp-for="@Model.IndividualExpenditures[i].ExpenseCategoryId" asp-items="ViewBag.categoryList" class="form-control indicat Selectinput" id="ExpenseCategory" required>
                                        <option value="">-- Select --</option>
                                    </select>
                                </td>

                                    <td style="text-align:center;">
                                    @Html.EditorFor(k =>k.IndividualExpenditures[i].Amount, new{htmlAttributes= new {@class ="form-control txt", id="txt"}})
                                </td>





                                    <td style="text-align:center;">
                                    @Html.EditorFor(k =>k.IndividualExpenditures[i].Comments, new{htmlAttributes= new {@class ="form-control comment"}})
                                </td>

                                    <td style="text-align:center;">
                                    @Html.EditorFor(k =>k.IndividualExpenditures[i].ReceiptNumber, new{htmlAttributes= new {@class ="form-control reciept"}})
                                </td>

                                    <td style="text-align:center;">
                                    <input asp-for="@Model.IndividualExpenditures[i].ExpenseProof" class="form-control expenseproof" type="file" name="ExpenseProof" accept="image/*" />
                                    @*<span asp-validation-for="@Model.IndividualExpenditures[i].ExpenseProof" class="text-danger"></span>*@
                                    <input asp-for="@Model.IndividualExpenditures[i].AttachmentPath" class="form-control chosenfilename" style="display:none" />
                                    <img src="/ExpenseProof/@Model.IndividualExpenditures[i].AttachmentPath" width="100" height="100" />
                                    <td style="text-align:center;">


                                    <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible"
                                            onclick="DeleteItem(this);">
                                        Delete
                                    </button>
                                </td>
                                <td style="display:none">
                                    <input asp-for="@Model.IndividualExpenditures[i].IsDelete" class="IsDelete" id="IsDelete" style="display:none" />
                                </td>
                            </tr>
                        }

                    </tbody>

                </table>




                <br />
                    <button id='btnAddDetailRow' type="button" class="btn btn-sm btn-secondary visible" style="background-color:#008000;" onclick="AddItem(this)">
                    Add
                </button>
                <div class="form-group" style="padding-left:700px;">
                        <input type="submit" value="Save" class="btn btn-success" style="background-color:#008000;" />
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
                <input type="hidden" id='hdnLastIndex' value="0" />
            </div>

        </form>
        @*  <input type="button" id="addRowBtn" value="Add New" name="Add New" />*@


    </div>



</div>
</body>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
    <script>

        var startDateInput = document.getElementById("startDate");
        var endDateInput = document.getElementById("endDate");

        $(document).ready(function () {
            InitializeKeyUp();

            $(".btn-success").click(function () {

                $(".expenseproof").each(function () {

                    $(this).siblings('.chosenfilename').val($(this)[0].files[0].name);
                });
            });

            function InitializeKeyUp() {
                $(".txt").each(function () {
                    $(this).keyup(function () {
                        calculateSum();
                    });
                });
            }

            function calculateSum() {
                var sum = 0;
                $(".txt").each(function () {
                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value);
                    }
                });
                $("#ttlamnt").val(sum);
            }

            $(document).on("change", ".expDate", function () {
                $(".expDate").each(function () {
                    var selectedDate = Date.parse($(this).val());
                    var startDate = Date.parse(startDateInput.value);
                    var endDate = Date.parse(endDateInput.value);

                    if (selectedDate < startDate || selectedDate > endDate) {
                        alert("EXPENDITURE DATE SHOULD BE BETWEEN START DATE AND END DATE");
                        $(this).val("");
                    }
                });
            });



        });



        function AddItem(btn) {

            var table = document.getElementById('IndividualExpenditure');
            var rows = table.getElementsByTagName('tr');

            if (rows.length == 1) {
                $(document).ready(function () {
                    location.reload(true);
                });
            }
            var lastrowIdx = rows.length - 1;

            var rowOuterHtml = rows[lastrowIdx].outerHTML;
            lastrowIdx = lastrowIdx - 1;

            var nextrowIdx = eval(lastrowIdx) + 1;

            // document.getElementById('hdnLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);


            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var cells = newRow.cells;
            for (var i = 0; i < cells.length; i++) {
                var input = cells[i].querySelector('input');
                if (input) {
                    //alert("yes");
                    input.value = ''; // Clear the value
                }
                var select = cells[i].querySelector('select');
                if (select) {
                    //alert("yes2");
                    select.selectedIndex = 0; // Reset the selected index of the dropdown to the 0th position
                }
                var fileInput = cells[i].querySelector('file');
                if (fileInput) {
                    fileInput.value = null; // Clear the selected file in the file input
                }
                var image = cells[i].querySelector('img');
                if (image) {
                    image.src = ''; // Clear the source of the displayed image
                }
            }

            InitializeKeyUp();


        }

        $('#IndividualExpenditure').on('click', '#clear', function () {
            $(this).parent('td')
                .siblings
                .empty();
        });

        function InitializeKeyUp() {
            //iterate through each textboxes and add keyup
            //handler to trigger sum event
            $(".txt").each(function () {
                $(this).keyup(function () {
                    calculateSum();
                });
            });
        }

        //calculate sum
        function calculateSum() {

            var sum = 0;
            //iterate through each textboxes and add the values
            $(".txt").each(function () {

                //add only if the value is number
                if (!isNaN(this.value) && this.value.length != 0) {
                    sum += parseFloat(this.value);
                }
            });
            $("#ttlamnt").val(sum);
        }

        //date ranges

        var startDateInput = document.getElementById("startDate");
        var endDateInput = document.getElementById("endDate");

        startDateInput.addEventListener("change", function () {
            endDateInput.min = startDateInput.value;
        });

        endDateInput.addEventListener("change", function () {
            startDateInput.max = endDateInput.value;
        });

        $(".expDate").change(function () {
            if (Date.parse(($(".expDate")).val()) < Date.parse(startDateInput.value) || Date.parse(($(".expDate")).val()) > Date.parse(endDateInput.value)) {
                alert("EXPENDITURE DATE SHOULD BE BETWEEN START DATE AND END DATE");
                $(".expDate").val("");
            }
        });

        function DeleteItem(btn) {
            //$(btn).closest('tr').hide();
            //$('#txt').val(0);
            //calculateSum();
            var row = $(btn).closest('tr');
            row.hide();
            row.find('.txt').val(0);
            row.find('.IsDelete').val(1);
            calculateSum();
        }
    </script>

}

